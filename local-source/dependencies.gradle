ext {

    Rx = [
            rxKotlin: "io.reactivex.rxjava3:rxkotlin:${RxKotlin}",
            rxJava  : "io.reactivex.rxjava3:rxjava:${RxJava}",
            bridge  : "com.github.akarnokd:rxjava3-bridge:${RxBridge}"
    ]

    kotlin = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    ]

    javax = [
            javax: "javax.inject:javax.inject:$JavaxInject"
    ]

    lifeCycle = [
            extensions         : "androidx.lifecycle:lifecycle-extensions:${LifeCycle}",
            reactivestreams_ktx: "androidx.lifecycle:lifecycle-reactivestreams-ktx:${LifeCycle}",
    ]

    room = [
            runtime: "androidx.room:room-runtime:${Room}",
            ktx    : "androidx.room:room-ktx:${Room}",
            rxJava : "androidx.room:room-rxjava2:${Room}"
    ]

    kaptDependency = [
            lifecyle_common_java8: "androidx.lifecycle:lifecycle-common-java8:${LifeCycle}",
            compiler             : "androidx.room:room-compiler:${Room}"
    ]

    testDependency = [
            junit    : "junit:junit:${Junit}",
            mockito  : "org.mockito:mockito-core:${Mockito}",
            core_arch: "androidx.arch.core:core-testing:${Arch_version}",
            room     : "androidx.room:room-testing:${Room}"
    ]

    androidTest = [
            ext        : "androidx.test.ext:junit:${JunitExt}",
            test_runner: "androidx.test:runner:${TestRule}"
    ]

    allImplementation = [
            Rx       : Rx.values(),
            Kotlin   : kotlin.values(),
            Javax    : javax.values(),
            LifeCycle: lifeCycle.values(),
            Room     : room.values()
    ]

    allTestImplementation = [
            test: testDependency.values()
    ]

    allAndroidTestImplementation = [
            android_test: androidTest.values()
    ]

    allKaptImplementation = [
            kapt: kaptDependency.values()
    ]
}
